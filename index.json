[,
{
	"uri": "https://Na-SangHwa.github.io/algorithm/practice/2022kakao_%EB%91%90-%ED%81%90-%ED%95%A9-%EA%B0%99%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/",
	"title": "2022KAKAO_두 큐 합 같게 만들기",
	"tags": [],
	"description": "",
	"content": "두 큐 합 같게 만들기 2022 KAKAO TECH INTERNSHIP 문제 설명\n반복문에서 쓰는 함수는 잘 생각하고 써야겠다\n3800ms 실행 시간에 시간 초과 때문에 통과 할 정도로만 줄이고 싶어서 if else 조건 검사를 수정해 3000ms 까지 줄였다 여전히 시간 초과가 발생해서 반복문에서 매번 O(n) 만큼 불필요 하게 쓰이던 sum() 함수를 빼버리고 실행 시간을 85ms 까지 줄였다 처음부터 라이브러리 사용 안하고 풀 생각 이었으나 pop() 이랑 append() 만 남은 코드에서도 시간 초과가 발생하니 그냥 collections의 deque를 사용해서 풀었다 pop() 도 O(n) 만큼 걸리니 O(1)인 deque로 14ms 까지 실행 시간을 줄이고 통과하였다\n해결 from collections import deque def solution(queue1, queue2): target = (sum(queue1) + sum(queue2))/2 c = 0 m = len(queue1) + len(queue2) +1 queue1 = deque(queue1) queue2 = deque(queue2) s1 = sum(queue1) s2 = sum(queue2) if not target.is_integer(): return -1 else: while s1 != target: if c \u0026gt; m: #무한루프방지 return -1 if s1 \u0026gt; target: f = queue1.popleft() s1 -= f queue2.append(f) s2 += f else: f = queue2.popleft() s2 -= f queue1.append(f) s1 += f c += 1 return c "
},
{
	"uri": "https://Na-SangHwa.github.io/algorithm/",
	"title": "Algorithm",
	"tags": [],
	"description": "",
	"content": "hi\n"
},
{
	"uri": "https://Na-SangHwa.github.io/",
	"title": "NSH&#39;s Tech Blog",
	"tags": [],
	"description": "",
	"content": "hi\n"
},
{
	"uri": "https://Na-SangHwa.github.io/algorithm/practice/",
	"title": "Practice",
	"tags": [],
	"description": "",
	"content": "hi\n"
}]